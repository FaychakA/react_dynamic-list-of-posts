{"version":3,"sources":["components/PostList.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["PostList","posts","className","map","post","key","id","title","getAll","url","fetch","then","response","json","App","useState","setPosts","loading","setLoading","handleLoadClick","a","commentsFromServer","usersFromServer","postsFromServer","postsWithUsersAndComments","user","find","userId","comments","filter","comment","postId","length","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"2QAmBeA,G,YAZmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,OACE,wBAAIC,UAAU,QACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACXF,EAAKG,aCTVC,EAAS,SAAIC,GACjB,OAAOC,MAHO,iEAGSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCoChBC,EAnCH,WAAO,IAAD,EACUC,mBAAiB,IAD3B,mBACTd,EADS,KACFe,EADE,OAEcD,oBAAS,GAFvB,mBAETE,EAFS,KAEAC,EAFA,KAIVC,EAAe,uCAAG,kCAAAC,EAAA,6DACtBF,GAAW,GADW,SDDOV,EAAgB,kBCCvB,cAGhBa,EAHgB,gBDAIb,EAAa,eCAjB,cAIhBc,EAJgB,gBDFId,EAAa,eCEjB,OAKhBe,EALgB,OAOhBC,EAA4BD,EAAgBpB,KAAI,SAAAC,GAAI,kCACrDA,GADqD,IAExDqB,KAAMH,EAAgBI,MAAK,SAAAD,GAAI,OAAIA,EAAKnB,KAAOF,EAAKuB,UACpDC,SAAUP,EAAmBQ,QAAO,SAAAC,GAAO,OAAI1B,EAAKE,KAAOwB,EAAQC,eAGrEf,EAASQ,GAba,4CAAH,qDAgBrB,OACE,yBAAKtB,UAAU,WACb,qDAECD,EAAM+B,OAAS,EACd,kBAAC,EAAD,CAAU/B,MAAOA,IAEjB,4BAAQgC,KAAK,SAASC,QAASf,EAAiBgB,SAAUlB,GACvDA,EAAU,aAAe,gBC7BpCmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.267dfc94.chunk.js","sourcesContent":["import React from 'react';\nimport './PostList.css';\n\ntype Props = {\n  posts: Post[];\n};\n\nconst PostList: React.FC<Props> = ({ posts }) => {\n  return (\n    <ul className=\"list\">\n      {posts.map(post => (\n        <li key={post.id}>\n          {post.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PostList;\n","\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api';\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n};\n\nexport const getPosts = () => getAll<Post>('/posts.json');\nexport const getComments = () => getAll<Comment>('/comments.json');\nexport const getUsers = () => getAll<User>('/users.json');\n","import React, { useState } from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nimport { getComments, getPosts, getUsers } from './helpers/api';\n\nconst App = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleLoadClick = async () => {\n    setLoading(true);\n\n    const commentsFromServer = await getComments();\n    const usersFromServer = await getUsers();\n    const postsFromServer = await getPosts();\n\n    const postsWithUsersAndComments = postsFromServer.map(post => ({\n      ...post,\n      user: usersFromServer.find(user => user.id === post.userId),\n      comments: commentsFromServer.filter(comment => post.id === comment.postId),\n    }));\n\n    setPosts(postsWithUsersAndComments);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Dynamic list of posts</h1>\n\n      {posts.length > 0 ? (\n        <PostList posts={posts} />\n      ) : (\n        <button type=\"button\" onClick={handleLoadClick} disabled={loading}>\n          {loading ? 'Loading...' : 'Load posts'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}