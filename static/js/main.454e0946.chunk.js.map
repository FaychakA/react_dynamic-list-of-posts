{"version":3,"sources":["components/ListOfComments/ListOfComments.tsx","components/PostList.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["ListOfComments","comments","className","length","map","comment","key","id","name","body","href","email","PostList","posts","post","title","user","getAll","url","fetch","then","response","json","App","searchQuery","useState","setPosts","loading","setLoading","inputValue","steInputValue","handleLoadClick","a","commentsFromServer","usersFromServer","postsFromServer","postsWithUsersAndComments","find","userId","filter","postId","type","value","onChange","event","target","toLowerCase","includes","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"iUA2BeA,G,kBApByB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,OACE,wBAAIC,UAAU,iBACXD,EAASE,OAAS,GAAKF,EAASG,KAAI,SAAAC,GAAO,OAC1C,wBAAIC,IAAKD,EAAQE,GAAIL,UAAU,iBAC7B,uBAAGA,UAAU,iBACVG,EAAQG,MAEX,uBAAGN,UAAU,iBACVG,EAAQI,MAEX,uBAAGC,KAAI,iBAAYL,EAAQM,OAAST,UAAU,kBAC3CG,EAAQM,cCcNC,EAzBmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,OACE,wBAAIX,UAAU,cACXW,EAAMT,KAAI,SAAAU,GAAI,OACb,wBAAIR,IAAKQ,EAAKP,GAAIL,UAAU,cAC1B,yBAAKA,UAAU,eAAf,SAEG,IACAY,EAAKC,OAER,uBAAGb,UAAU,gBAAb,UAEG,IACAY,EAAKE,KAAOF,EAAKE,KAAKR,KAAO,IAEhC,uBAAGN,UAAU,cACVY,EAAKL,MAER,kBAAC,EAAD,CAAgBR,SAAUa,EAAKb,SAAWa,EAAKb,SAAW,WCvB9DgB,EAAS,SAAIC,GACjB,OAAOC,MAHO,iEAGSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC2DhBC,EA1DH,WAAO,IAqBGC,EArBJ,EACUC,mBAAiB,IAD3B,mBACTZ,EADS,KACFa,EADE,OAEcD,oBAAkB,GAFhC,mBAETE,EAFS,KAEAC,EAFA,OAGoBH,mBAAiB,IAHrC,mBAGTI,EAHS,KAGGC,EAHH,KAKVC,EAAe,uCAAG,kCAAAC,EAAA,6DACtBJ,GAAW,GADW,SDFOX,EAAgB,kBCEvB,cAGhBgB,EAHgB,gBDDIhB,EAAa,eCCjB,cAIhBiB,EAJgB,gBDHIjB,EAAa,eCGjB,OAKhBkB,EALgB,OAOhBC,EAA4BD,EAAgB/B,KAAI,SAAAU,GAAI,kCACrDA,GADqD,IAExDE,KAAMkB,EAAgBG,MAAK,SAAArB,GAAI,OAAIA,EAAKT,KAAOO,EAAKwB,UACpDrC,SAAUgC,EAAmBM,QAAO,SAAAlC,GAAO,OAAIS,EAAKP,KAAOF,EAAQmC,eAGrEd,EAASU,GAba,4CAAH,qDAwBrB,OACE,yBAAKlC,UAAU,WACb,wBAAIA,UAAU,SAAd,yBAECW,EAAMV,OAAS,EACd,yBAAKD,UAAU,WACb,2BACEuC,KAAK,OACLvC,UAAU,QACVwC,MAAOb,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAcc,EAAMC,OAAOH,MAAMI,kBAGtD,kBAAC,EAAD,CAAUjC,OArBEW,EAqBgBK,EApB3BhB,EAAM0B,QAAO,SAACzB,GAGnB,MAFe,UAAIA,EAAKC,MAAT,YAAkBD,EAAKL,MAAQqC,cAEhCC,SAASvB,UAoBrB,4BACEiB,KAAK,SACLvC,UAAU,kBACV8C,QAASjB,EACTkB,SAAUtB,GAETA,EAAU,aAAe,gBCpDpCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.454e0946.chunk.js","sourcesContent":["import React from 'react';\nimport './ListOfComments.css';\n\ntype Props = {\n  comments: Comment[];\n};\n\nconst ListOfComments: React.FC<Props> = ({ comments }) => {\n  return (\n    <ul className=\"comment__list\">\n      {comments.length > 0 && comments.map(comment => (\n        <li key={comment.id} className=\"comment__item\">\n          <p className=\"comment__name\">\n            {comment.name}\n          </p>\n          <p className=\"comment__body\">\n            {comment.body}\n          </p>\n          <a href={`mailto:${comment.email}`} className=\"comment__email\">\n            {comment.email}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListOfComments;\n","import React from 'react';\nimport './PostList.css';\nimport ListOfComments from './ListOfComments/ListOfComments';\n\ntype Props = {\n  posts: Post[];\n};\n\nconst PostList: React.FC<Props> = ({ posts }) => {\n  return (\n    <ul className=\"post__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"post__item\">\n          <div className=\"post__title\">\n            Title:\n            {' '}\n            {post.title}\n          </div>\n          <p className=\"post__author\">\n            Author:\n            {' '}\n            {post.user ? post.user.name : ''}\n          </p>\n          <p className=\"post__body\">\n            {post.body}\n          </p>\n          <ListOfComments comments={post.comments ? post.comments : []} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PostList;\n","\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api';\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n};\n\nexport const getPosts = () => getAll<Post>('/posts.json');\nexport const getComments = () => getAll<Comment>('/comments.json');\nexport const getUsers = () => getAll<User>('/users.json');\n","import React, { useState } from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nimport { getComments, getPosts, getUsers } from './helpers/api';\n\nconst App = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [inputValue, steInputValue] = useState<string>('');\n\n  const handleLoadClick = async () => {\n    setLoading(true);\n\n    const commentsFromServer = await getComments();\n    const usersFromServer = await getUsers();\n    const postsFromServer = await getPosts();\n\n    const postsWithUsersAndComments = postsFromServer.map(post => ({\n      ...post,\n      user: usersFromServer.find(user => user.id === post.userId),\n      comments: commentsFromServer.filter(comment => post.id === comment.postId),\n    }));\n\n    setPosts(postsWithUsersAndComments);\n  };\n\n  const foundPosts = (searchQuery: string): Post[] => {\n    return posts.filter((post) => {\n      const string = (`${post.title} ${post.body}`).toLowerCase();\n\n      return string.includes(searchQuery);\n    });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"title\">Dynamic list of posts</h1>\n\n      {posts.length > 0 ? (\n        <div className=\"wrapper\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={inputValue}\n            onChange={event => steInputValue(event.target.value.toLowerCase())}\n          />\n\n          <PostList posts={foundPosts(inputValue)} />\n        </div>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"button__loading\"\n          onClick={handleLoadClick}\n          disabled={loading}\n        >\n          {loading ? 'Loading...' : 'Load posts'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}